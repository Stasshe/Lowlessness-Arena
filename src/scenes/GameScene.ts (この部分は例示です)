


































);  this  },    return true; // それ以外は通常通り衝突する    }      return !bullet.isSameOwner(player);      // 同じ所有者なら衝突しない（false を返す）    if (bullet instanceof Bullet) {    // Bulletインスタンスであることを確認  (player, bullet) => {  undefined, // コールバック不要  this.playerBullets,  this.player,this.physics.add.collider(// この方法では衝突判定自体を無効化し、パフォーマンスも向上します// プレイヤーとその弾の衝突を除外する);  }    }      }        bullet.onHit(enemy);        // 弾のヒット処理                enemy.takeDamage(bullet.getDamage());        // ダメージを適用      if (bullet.canDamage(enemy)) {      // この弾がダメージ可能かチェック（所有者との衝突を除外）    if (bullet instanceof Bullet) {    // Bulletインスタンスであることを確認  (bullet: any, enemy: any) => {  this.enemies,  this.playerBullets,this.physics.add.collider(// プレイヤーの弾と敵の衝突判定